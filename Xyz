<h5>Masters</h5>
<div class="row">
  <div class="col-md-2">
    <!-- Your menu items -->
  </div>

  <div class="col-md-8">
    <ngb-nav #nav="ngbNav" [(activeId)]="activeItem" (navChange)="tabChange($event)">
      <ng-container *ngFor="let tab of tabs; let i = index">
        <ngb-nav-item [id]="i + 1">
          <ngb-nav-link>{{ tab.displayName }}</ngb-nav-link>
        </ngb-nav-item>
      </ng-container>
    </ngb-nav>

    <div class="tab-content">
      <div class="tab-pane fade show" role="tabpanel" *ngFor="let tab of tabs" [ngbNavOutlet]="tab.itemName">
        <!-- Render component based on tab.itemName -->
        <ng-container *ngIf="activeItem === tab.itemName">
          <ng-container *ngIf="tab.itemName === 'Countries'">
            <app-countries></app-countries>
          </ng-container>
          <ng-container *ngIf="tab.itemName === 'ClientLocations'">
            <app-client-locations></app-client-locations>
          </ng-container>
          <!-- Add similar ngIf blocks for other components -->
        </ng-container>
      </div>
    </div>
  </div>
</div>
import { Component, OnInit } from '@angular/core';
import { NgbNavChangeEvent } from '@ng-bootstrap/ng-bootstrap';
import { CountriesComponent } from '../countries/countries.component';
import { ClientLocationsComponent } from '../client-locations/client-locations.component';
import { TaskPrioritiesComponent } from '../task-priorities/task-priorities.component';
import { TaskStatusComponent } from '../task-status/task-status.component';

@Component({
  selector: 'app-masters',
  templateUrl: './masters.component.html',
  styleUrls: ['./masters.component.scss']
})
export class MastersComponent implements OnInit {
  masterMenuItems = [
    { itemName: "Countries", displayName: "Countries", component: CountriesComponent },
    { itemName: "ClientLocations", displayName: "Client Locations", component: ClientLocationsComponent },
    { itemName: "TaskPriorities", displayName: "Task Priorities", component: TaskPrioritiesComponent },
    { itemName: "TaskStatus", displayName: "Task Status", component: TaskStatusComponent },
  ];

  activeItem: string = "";
  tabs: any[] = [];

  constructor() {}

  ngOnInit() {}

  menuItemClick(clickedMasterMenuItem: any) {
    this.activeItem = clickedMasterMenuItem.itemName;

    let matchingTab = this.tabs.find((tab) => tab.itemName === clickedMasterMenuItem.itemName);

    if (!matchingTab) {
      this.tabs.push({
        itemName: clickedMasterMenuItem.itemName,
        displayName: clickedMasterMenuItem.displayName
      });
    }
  }

  // Function to handle tab change event
  tabChange($event: NgbNavChangeEvent) {
    this.activeItem = this.tabs[$event.nextId - 1].itemName;
  }
}






<h5>Masters</h5>
<div class="row">
  <div class="col-md-2">
    <div class="list-group">
      <a href="#" class="list-group-item list-group-item-action" onclick="return false"
        *ngFor="let masterMenuItem of masterMenuItems"
        [ngClass]="{ 'active': activeItem == masterMenuItem.itemName}" (click)="menuItemClick(masterMenuItem)">
        {{masterMenuItem.displayName}}
      </a>
    </div>
  </div>

  <div class="col-md-8">
    <ul ngbNav #nav="ngbNav" [(activeId)]="activeItem" class="nav-tabs">
      <li *ngFor="let tab of tabs" [ngbNavItem]="tab.itemName">
        <button ngbNavLink>
          {{tab.displayName}}
          <span class="fa fa-window-close" (click)="onCloseClick(tab)"></span>
        </button>
        <ng-template ngbNavContent>
          <div class="tab-content">
            <div class="tab-pane fade show" role="tabpanel" [id]="tab.itemName">
              <!-- Your main content goes here -->
              <ng-container *ngIf="tab.component === 'CountriesComponent'; else otherComponent">
                <app-countries></app-countries>
              </ng-container>
              <ng-template #otherComponent>
                <!-- Add similar ngIf blocks for other components -->
              </ng-template>
            </div>
          </div>
        </ng-template>
      </li>
    </ul>
  </div>
</div>

<pre>Active: {{ activeItem }}</pre>



