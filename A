// masters.component.ts

import { Component, OnInit, ViewChildren, QueryList, ViewContainerRef, ComponentRef, ComponentFactoryResolver, Type } from '@angular/core';

@Component({
  selector: 'app-masters',
  templateUrl: './masters.component.html',
  styleUrls: ['./masters.component.scss']
})
export class MastersComponent implements OnInit {
  masterMenuItems = [
    { itemName: "Countries", displayName: "Countries", component: CountriesComponent },
    { itemName: "ClientLocations", displayName: "Client Locations", component: ClientLocationsComponent },
    { itemName: "TaskPriorities", displayName: "Task Priorities", component: TaskPrioritiesComponent },
    { itemName: "TaskStatus", displayName: "Task Status", component: TaskStatusComponent },
  ];

  activeItem: string = "";
  tabs: any[] = [];

  @ViewChildren('dynamicComponent', { read: ViewContainerRef }) dynamicComponentRefs: QueryList<ViewContainerRef> | any = null;

  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}

  ngOnInit() {}

  menuItemClick(clickedMasterMenuItem: any) {
    this.activeItem = clickedMasterMenuItem.itemName;

    const matchingTabs = this.tabs.filter(tab => tab.itemName === clickedMasterMenuItem.itemName);

    if (matchingTabs.length === 0) {
      const tabIndex = this.tabs.length;
      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(clickedMasterMenuItem.component);
      const viewContainerRef = this.dynamicComponentRefs.toArray()[tabIndex];

      this.tabs.push({
        tabIndex,
        itemName: clickedMasterMenuItem.itemName,
        displayName: clickedMasterMenuItem.displayName,
        viewContainerRef
      });

      const componentRef = viewContainerRef.createComponent(componentFactory);

      // Perform any component-specific logic here
    }
  }

  onCloseClick(clickedTab: any) {
    clickedTab.viewContainerRef.remove();
    this.tabs.splice(this.tabs.indexOf(clickedTab), 1);

    if (this.tabs.length > 0) {
      this.activeItem = this.tabs[0].itemName;
    }
  }
}


<!-- masters.component.html -->

<h5>Masters</h5>
<div class="row">
  <div class="col-md-2">
    <div class="list-group">
      <a href="#" class="list-group-item list-group-item-action"
        *ngFor="let masterMenuItem of masterMenuItems"
        [ngClass]="{ 'active': activeItem === masterMenuItem.itemName}" (click)="menuItemClick(masterMenuItem)">
        {{ masterMenuItem.displayName }}
      </a>
    </div>
  </div>

  <div class="col-md-8">
    <ul class="nav nav-tabs" role="tablist">
      <li class="nav-item" *ngFor="let tab of tabs">
        <a class="nav-link" role="tab" [class.active]="activeItem === tab.itemName" (click)="activeItem = tab.itemName">
          {{ tab.displayName }}
          <span class="fa fa-window-close" (click)="onCloseClick(tab)"></span>
        </a>
      </li>
    </ul>

    <div class="tab-content">
      <ng-container *ngFor="let tab of tabs">
        <div class="tab-pane fade show" role="tabpanel" [id]="tab.itemName" [class.active]="activeItem === tab.itemName">
          <!-- No need for appComponentLoader directive -->
          <ng-container #dynamicComponent></ng-container>
        </div>
      </ng-container>
    </div>
  </div>
</div>
